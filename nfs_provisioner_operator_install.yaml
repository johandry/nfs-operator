apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: nfs-operator-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: nfs.nfs.storage.ibmcloud.ibm.com
spec:
  group: nfs.storage.ibmcloud.ibm.com
  names:
    kind: Nfs
    listKind: NfsList
    plural: nfs
    singular: nfs
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Nfs is the Schema for the nfs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NfsSpec defines the desired state of Nfs
          properties:
            backingStorage:
              description: Specifications for the backing storage used to export the
                NFS volume
              properties:
                name:
                  description: Name of the PVC to create or use, if exists
                  minLength: 0
                  type: string
                request:
                  description: Specifications to request for the PVC to create
                  properties:
                    storage:
                      description: Storage size to request
                      minLength: 0
                      type: string
                  type: object
                storageClassName:
                  description: Storage class used to create the PVC. Defaults to ibmc-vpc-block-general-purpose
                  type: string
                useExistingPVC:
                  description: Defines if the backing storage is created (false) or
                    will use an existing (true) PVC previously created by the user.
                    Default is false
                  type: boolean
              type: object
            provisionerAPI:
              description: Defines the provisioner API. Defaults to cluster.example.com/nfs
              type: string
            storageClassName:
              description: The storageClass that the provisioner will listen for requests.
                Defaults to cluster-nfs
              type: string
          type: object
        status:
          description: NfsStatus defines the observed state of Nfs
          properties:
            accessMode:
              type: string
            capacity:
              type: string
            status:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: nfs-operator-system/nfs-operator-serving-cert
  creationTimestamp: null
  name: nfs-operator-mutating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: nfs-operator-webhook-service
      namespace: nfs-operator-system
      path: /mutate-nfs-storage-ibmcloud-ibm-com-v1alpha1-nfs
  failurePolicy: Fail
  name: mnfs.kb.io
  rules:
  - apiGroups:
    - nfs.storage.ibmcloud.ibm.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - nfs
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: nfs-operator-leader-election-role
  namespace: nfs-operator-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: nfs-operator-manager-role
rules:
- apiGroups:
  - nfs.storage.ibmcloud.ibm.com
  resources:
  - nfs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - nfs.storage.ibmcloud.ibm.com
  resources:
  - nfs/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: nfs-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nfs-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: nfs-operator-leader-election-rolebinding
  namespace: nfs-operator-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nfs-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: nfs-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfs-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfs-operator-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: nfs-operator-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: nfs-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nfs-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: nfs-operator-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: nfs-operator-controller-manager-metrics-service
  namespace: nfs-operator-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-operator-webhook-service
  namespace: nfs-operator-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: nfs-operator-controller-manager
  namespace: nfs-operator-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /manager
        image: johandry/nfs-operator:0.0.1
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 30Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: nfs-operator-serving-cert
  namespace: nfs-operator-system
spec:
  dnsNames:
  - nfs-operator-webhook-service.nfs-operator-system.svc
  - nfs-operator-webhook-service.nfs-operator-system.svc.cluster.local
  issuerRef:
    kind: Issuer
    name: nfs-operator-selfsigned-issuer
  secretName: webhook-server-cert
---
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: nfs-operator-selfsigned-issuer
  namespace: nfs-operator-system
spec:
  selfSigned: {}
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    cert-manager.io/inject-ca-from: nfs-operator-system/nfs-operator-serving-cert
  creationTimestamp: null
  name: nfs-operator-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: nfs-operator-webhook-service
      namespace: nfs-operator-system
      path: /validate-nfs-storage-ibmcloud-ibm-com-v1alpha1-nfs
  failurePolicy: Fail
  name: vnfs.kb.io
  rules:
  - apiGroups:
    - nfs.storage.ibmcloud.ibm.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - nfs
